import React from 'react';

// import styles
import styles from './styles.module.scss';

// import components
import DisplayLandmarks from '../DisplayLandmarks';

export default class Home extends React.Component {
  constructor() {
    super();
    this.state = {
      long: 0,
      lat: 0,
      address: '',
      loadingCurrentLocation: false,
      viewLandmarks: false,
      landmarks: [],
      noAddressError: false,
      disabledBtn: true,
      showVisitedSuccess: false,
      visitedCounter: {
        total: 0,
        c: 0,
        l: 0,
      },
    };
  }

  getStarted = () => {
    if (this.state.lat && this.state.long && this.state.address) {
      fetch('https://dns0mi9ijd.execute-api.us-east-1.amazonaws.com/dev/calculateClosestSite', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          lat: this.state.lat,
          lng: this.state.long,
        }),
      })
        .then(response => response.json())
        .then((data) => {
          const landmarks = [];
          for (let i = 0; i < data.body.length; i++) {
            const landmark = data.body[i];
            landmarks[i] = {
              key: i,
              name: landmark[1],
              type: landmark[2],
              address: landmark[0],
              miles: landmark[3].toFixed(2),
              visited: false,
            };
          }
          this.setState({
            viewLandmarks: true,
            noAddressError: false,
            landmarks,
          });
        });
    } else {
      this.setState({
        noAddressError: true,
      });
    }
  };

  startOver = () => {
    this.setState({
      landmarks: [],
      viewLandmarks: false,
      address: '',
      disabledBtn: true,
    });
  };

  useCurrentLocation = () => {
    this.setState({
      loadingCurrentLocation: true,
    });

    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(this.convertPositionToAddress);
    } else {
      console.log('Geolocation is not supported by this browser.');
      this.setState({
        loadingCurrentLocation: false,
      });
    }
  };

  convertPositionToAddress = (position) => {
    fetch('https://dns0mi9ijd.execute-api.us-east-1.amazonaws.com/dev/getAddrFromLatLong', {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        lat: position.coords.latitude,
        lng: position.coords.longitude,
      }),
    })
      .then(response => response.json())
      .then((data) => {
        this.setState({
          address: data.addr,
          lat: position.coords.latitude,
          long: position.coords.longitude,
          loadingCurrentLocation: false,
          noAddressError: false,
          disabledBtn: false,
        });
      });
  };

  submitAddress = () => {
    const address = this.state.address;
    if (address) {
      fetch('https://dns0mi9ijd.execute-api.us-east-1.amazonaws.com/dev/getLatLongFromAddr', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          addr: address,
        }),
      })
        .then(response => response.json())
        .then((result) => {
          this.setState({
            address,
            lat: result.lat,
            long: result.lng,
            disabledBtn: false,
          });
        });
    }
  };

  handleAddressChange = (event) => {
    if (event.target.value) {
      this.setState({
        address: event.target.value,
        noAddressError: false,
      });
    } else {
      this.setState({
        address: event.target.value,
        noAddressError: false,
        disabledBtn: true,
      });
    }
  }

  toggleVisited = (landmarkId) => {
    const landmarks = this.state.landmarks;
    const visited = landmarks[landmarkId].visited;
    landmarks[landmarkId].visited = !visited;

    const visitedCounter = this.state.visitedCounter;
    const type = landmarks[landmarkId].type;
    if (!landmarks[landmarkId].visited) {
      visitedCounter.total -= 1;
      if (type === 'Landmark') {
        visitedCounter.l -= 1;
      } else {
        visitedCounter.c -= 1;
      }
      this.setState({
        landmarks,
        visitedCounter,
      });
    } else {
      visitedCounter.total += 1;
      if (type === 'Landmark') {
        visitedCounter.l += 1;
      } else {
        visitedCounter.c += 1;
      }
      this.setState({
        landmarks,
        showVisitedSuccess: true,
        visitedCounter,
        viewLandmarks: false,
      });
    }
  };

  continueExploring = (landmarkId) => {
    this.setState({
      viewLandmarks: true,
      showVisitedSuccess: false,
    });
  }

  render() {
    let currentLocBtnText = 'Use My Current Location';
    if (this.state.loadingCurrentLocation) {
      currentLocBtnText = 'Loading Your Location...';
    }

    let showError = null;
    if (this.state.noAddressError) {
      showError = <p className={styles.error}>Please enter an address</p>;
    }

    let pageContent = (
      <div className={styles.wrapper}>
        <h1>Start Your Journey</h1>

        <p>Find historical landmarks and chili restaurants near you.</p>

        <button className={styles.blueBtn} onClick={this.useCurrentLocation}>
          {currentLocBtnText}
        </button>

        <div>
          <div className={styles.location}>
            <input type="text" name="location" id="location" placeholder="enter an address" value={this.state.address} onChange={this.handleAddressChange} onBlur={this.submitAddress} />
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M256 0C153.755 0 70.573 83.182 70.573 185.426c0 126.888 165.939 313.167 173.004 321.035 6.636 7.391 18.222 7.378 24.846 0 7.065-7.868 173.004-194.147 173.004-321.035C441.425 83.182 358.244 0 256 0zm0 278.719c-51.442 0-93.292-41.851-93.292-93.293S204.559 92.134 256 92.134s93.291 41.851 93.291 93.293-41.85 93.292-93.291 93.292z" /></svg>
          </div>
        </div>
        {showError}
        <button onClick={this.getStarted} disabled={this.state.disabledBtn}>Get Started</button>
      </div>
    );

    if (this.state.viewLandmarks) {
      pageContent = (
        <div className={styles.viewLandmarks}>
          <h1>Near You</h1>
          <a onClick={this.startOver}>Start Over</a>
          <DisplayLandmarks
            landmarks={this.state.landmarks}
            toggleVisited={this.toggleVisited}
            currentAddress={this.state.address}
          />
        </div>
      );
    } else if (this.state.showVisitedSuccess) {
      let places = 'places';
      if (this.state.visitedCounter.total <= 1) {
        places = 'place';
      }
      let rank = 'Novice';
      let nextRank = 'Veteran';
      let numTilNext = Math.abs(this.state.visitedCounter.total - 3);
      let nextRankImg = (
        <div className={styles.ranks}>
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200">
            <g id="Layer_6" data-name="Layer 6">
              <g id="Layer_8_copy" data-name="Layer 8 copy">
                <path fill="#fff" d="M99 153.75a2 2 0 0 1 0-4c34 0 45.36-8.62 48.68-12.33 3.54-4 8.12-13.89 7.22-23.58a22.92 22.92 0 0 0-9.21-16.59c-6.56-5.06-13.79-6.06-21.5-3a32.36 32.36 0 0 0-9.85 6.3 2 2 0 0 1-2.84-2.82 36.19 36.19 0 0 1 11.2-7.19 24.7 24.7 0 0 1 25.43 3.53 26.78 26.78 0 0 1 10.75 19.39c1.06 11.5-4.48 22.43-8.22 26.61-4.53 5.12-17.31 13.68-51.66 13.68z" />
                <path fill="#fff" d="M99.59 168.83a2 2 0 0 1 0-4c13.37 0 22.53-2.78 25.14-7.63a46.12 46.12 0 0 1 9-11.33 2 2 0 0 1 2.65 3 42.77 42.77 0 0 0-8.08 10.23c-4.37 8.04-18.02 9.73-28.71 9.73z" />
                <path fill="#fff" d="M108.75 152.25l1.21.17h2c2.29 0 2.16 1.5 2.16-.58 0-3.39 3.05-2.16 5-2.3 1.1-.07 3.05-.24 3.13.86a2 2 0 0 1-1.83 2.13c-1 .11-1 .76-1 1 0 4.41-2.23 6.65-6.62 6.65-2.75 0-6.39-.51-6.49-4.84a8.48 8.48 0 0 0-3.13-1.65 2 2 0 0 1 1.2-3.82M138.92 92.54h-.16a2 2 0 0 1-1.84-2.15c0-.21 1.51-21.17-10.9-35.84a2 2 0 0 1 1-3.22c.05 0 5.94-1.75 5.83-5.26-.07-2.25-.6-3.84-1.5-4.46-.69-.48-1.76-.49-3.18 0-2.21.73-3.67 2.83-4.5 4.46a3.33 3.33 0 0 1-2.58 1.8 3.28 3.28 0 0 1-2.88-1.14c-2-2.41-7.12-6.45-18.21-6.45a2 2 0 0 1 0-4c11.67 0 17.74 4.16 20.58 7.11a11.9 11.9 0 0 1 6.34-5.58c3.35-1.1 5.51-.31 6.73.54 2 1.41 3.09 4 3.2 7.62.13 4.35-3.43 6.9-6.07 8.18C142.43 69.81 141 89.82 140.91 90.7a2 2 0 0 1-1.99 1.84zM98.89 153.75c-34.32 0-47.1-8.56-51.66-13.66-3.74-4.18-9.28-15.09-8.23-26.61a26.78 26.78 0 0 1 10.76-19.39 24.69 24.69 0 0 1 25.43-3.53 36.19 36.19 0 0 1 11.2 7.19 2 2 0 0 1-2.83 2.82c-.63-.63-15.73-15.39-31.35-3.32a22.92 22.92 0 0 0-9.21 16.6c-.89 9.69 3.69 19.62 7.22 23.58 3.31 3.71 14.69 12.33 48.67 12.33a2 2 0 0 1 0 4z" />
                <path fill="#fff" d="M99.3 168.83c-10.69 0-24.33-1.69-28.66-9.73a42.57 42.57 0 0 0-8.08-10.23 2 2 0 1 1 2.65-3 46.18 46.18 0 0 1 9 11.33c2.61 4.85 11.77 7.63 25.14 7.63a2 2 0 0 1 0 4z" />
                <path fill="#fff" d="M94.63 149.84a2 2 0 0 1 1.19 3.82 8.47 8.47 0 0 0-3.13 1.65c-.1 4.34-3.74 4.84-6.49 4.84-4.39 0-6.62-2.24-6.62-6.65 0-.21 0-.86-1-1a2 2 0 0 1-1.8-2.17c.09-1.09 1.18-1.36 2.17-.94 2.06.88 6.42-1.24 6.42 2.16 0 2.09-.64.83 1.65.83M60 92.54a2 2 0 0 1-2-1.84c-.07-.88-1.52-20.89 10.12-36.58-2.63-1.29-6.2-3.84-6.07-8.18.11-3.64 1.19-6.21 3.2-7.62 1.22-.86 3.39-1.64 6.73-.54a11.9 11.9 0 0 1 6.34 5.58c2.84-3 8.92-7.11 20.58-7.11a2 2 0 0 1 0 4c-11.09 0-16.17 4-18.21 6.45a3.25 3.25 0 0 1-2.88 1.14 3.33 3.33 0 0 1-2.6-1.84c-.83-1.63-2.28-3.72-4.5-4.46-1.43-.47-2.5-.46-3.19 0-.9.63-1.43 2.21-1.5 4.46-.11 3.51 5.78 5.24 5.84 5.26a2 2 0 0 1 1 3.22C60.46 69.21 62 90.17 62 90.38a2 2 0 0 1-1.84 2.15zM57.9 106.49s7.84-5.34 9.47 0-12.28 13.34-13.37 7.26a8.53 8.53 0 0 1 3.9-7.26zM133.69 112.28s-6.72-6.7-1.78-9.3 15.4 9.56 9.64 11.81a8.53 8.53 0 0 1-7.86-2.51z" />
                <path fill="#fff" d="M85.57 73.69a8.18 8.18 0 1 1 8.18-8.18 8.19 8.19 0 0 1-8.18 8.18zm0-12.36a4.18 4.18 0 1 0 4.18 4.18 4.19 4.19 0 0 0-4.18-4.18zM113.8 73.69a8.18 8.18 0 1 1 8.2-8.18 8.19 8.19 0 0 1-8.2 8.18zm0-12.36a4.18 4.18 0 1 0 4.2 4.18 4.19 4.19 0 0 0-4.2-4.18z" />
                <path fill="#ef7de9" d="M111.46 42.85l11.34 3.7 1.6-10.67-11.79 1.17" />
                <path fill="#fff" d="M122.79 48.55a2 2 0 0 1-.62-.1l-11.33-3.69a2 2 0 0 1 1.24-3.8l9.09 3 .87-5.79-9.23.92a2 2 0 0 1-.4-4l11.78-1.17a2 2 0 0 1 2.18 2.29l-1.6 10.67a2 2 0 0 1-2 1.7z" />
                <path fill="#ef7de9" d="M102.6 35.09l-11.34-3.7-1.6 10.67 11.78-1.17" />
                <path fill="#fff" d="M89.66 44.06a2 2 0 0 1-2-2.3l1.6-10.67a2 2 0 0 1 2.6-1.6l11.33 3.69A2 2 0 0 1 102 37l-9.09-3-.91 5.82 9.23-.92a2 2 0 0 1 .4 4l-11.77 1.16z" />
                <rect fill="#ef7de9" x="101.84" y="33.27" width="10.79" height="10.79" rx="5.4" ry="5.4" transform="rotate(8.54 107.197 38.663)" />
                <path fill="#fff" d="M107.24 46.06a7.49 7.49 0 0 1-1.11-.08 7.35 7.35 0 1 1 1.11.08zm0-10.79a3.39 3.39 0 0 0-2.72 5.41 3.37 3.37 0 0 0 2.21 1.32 3.41 3.41 0 0 0 3.86-2.85 3.4 3.4 0 0 0-2.85-3.86 3.36 3.36 0 0 0-.51-.02z" />
                <path fill="#fff" d="M100 7a93 93 0 1 1-93 93 93.11 93.11 0 0 1 93-93m0-7a100 100 0 1 0 100 100A100 100 0 0 0 100 0z" />
              </g>
            </g>
          </svg>
        </div>
      );
      if (this.state.visitedCounter.total >= 3 && this.state.visitedCounter.total < 5) {
        rank = 'Veteran';
        nextRank = 'Expert';
        numTilNext = Math.abs(this.state.visitedCounter.total - 5);
        nextRankImg = (
          <div className={styles.ranks}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200">
              <g id="Layer_12" data-name="Layer 12">
                <path fill="#fff" d="M100 0a100 100 0 1 0 100 100A100 100 0 0 0 100 0zm0 193a93 93 0 1 1 93-93 93.11 93.11 0 0 1-93 93z" />
                <path fill="#fff" d="M160.41 112.33a2 2 0 0 0-2.28-.86c-6.36 1.92-9.6-.77-10.46-1.66-.19-.73-.37-1.47-.53-2.24a17.55 17.55 0 0 0 11.07-8.74 2.11 2.11 0 0 0-.62-2.73 1.86 1.86 0 0 0-2.57.4c-.05 0-5.27 4.42-25.33-4.35-3.43-1.4-7.75-1.66-13.43-.8 3.07-4 7.72-6.08 14.59-8.08 9.1-2.67 10.79-12.61 11.09-15.31A18.82 18.82 0 0 0 145.5 55c2.4-3.83 2.57-8.62 1.28-11.07a2 2 0 0 0-3-.64c-.07.05-4.76 3.76-11.79 8.77.06-.27.1-.54.13-.81a7.37 7.37 0 0 0-1.23-5.18 7.46 7.46 0 0 0 .26-1.15 6.21 6.21 0 0 0-1.87-5.3l-.07-.08a3.84 3.84 0 0 0-2.94-1.38c-2.73 0-5.5 2.68-10.68 8.64-3.08 3.55-6.9 5.68-10.59 7.74a41.48 41.48 0 0 0-8.06 5.35c-5.31 4.86-4 10.6-2.59 17.26.23 1.07.48 2.18.71 3.35a53.2 53.2 0 0 1 .25 15.68 20.11 20.11 0 0 1-3.33.34 9.7 9.7 0 0 1-4.36-.75c1.68-1 3.76-2.83 4-5.37a7.24 7.24 0 0 0-1.42-5.54 4.44 4.44 0 0 0-3.25-1.51 6.67 6.67 0 0 0-4 1.73 9.71 9.71 0 0 0-5.1-3.86 8.67 8.67 0 0 0-5.59-.13c-1.57.39-2.29.57-4.84-3.26-3.45-5-9.23-5.17-12.26-4.88a4.43 4.43 0 0 0-.7-1 5.42 5.42 0 0 0-4.19-1.6 7.11 7.11 0 0 0-5 2 5.87 5.87 0 0 1-2.87 1.45c-3 .67-12.87 3.8-13.93 15.77-.94 10.7 8.16 20.93 17.51 24.64l1.6.63c4.92 1.92 7.66 3 11.63 8.88l-8.58.94a2 2 0 0 0-1.74 2.4l1.78 8.46a2 2 0 0 0 2 1.59h9.23a80.17 80.17 0 0 1-6.9 6.73 2 2 0 0 0-.25 2.74l7.12 9a2 2 0 0 0 1.36.75h.22a2 2 0 0 0 1.27-.45C69.46 152 75.85 148 78 148.24a33.42 33.42 0 0 1 5.2 1.59c5.94 2.1 15.88 5.61 28.5 5.79h.39c8.53 0 15.39-4 22-7.82 7.62-4.41 14.2-8.22 22.28-5.77a2 2 0 0 0 2.55-1.58c1.32-7.81 1.71-9.42 1.72-9.47a2 2 0 0 0-.84-2.16 17.54 17.54 0 0 1-1.48-1.18c.8-2.14 3.75-4.48 5.66-5.58a2 2 0 0 0 .71-2.79zm-18.61-59a2 2 0 0 0-.1.18l-.07.11c0 .1-4.91 9.67-22.2 14.86a2 2 0 1 0 1.15 3.83c10.48-3.14 16.84-7.85 20.46-11.51a14.39 14.39 0 0 1-2.47 4.94 2 2 0 0 0-.33.46c0 .06-3.35 5.63-20.72 10a2 2 0 1 0 1 3.88c8.93-2.24 14.51-4.84 18-7.06a10.8 10.8 0 0 1-6.72 6.36c-11.29 3.29-18 7.23-20.84 18.63-.68 2.68-1.87 4.47-3.53 5.33a6 6 0 0 1-2.51.62 23.79 23.79 0 0 0 3.2-6.77v-.12A35.34 35.34 0 0 0 107.46 87c0-12.69 1.42-15.14 12.64-21.82 1.56-1 3-2 4.23-3 8.39-5.55 15.47-10.81 19.15-13.61a9.59 9.59 0 0 1-1.68 4.78zm-42.19 9.5a38.56 38.56 0 0 1 7.31-4.8c3.81-2.12 8.13-4.53 11.67-8.61 1.53-1.76 6.12-7.05 7.6-7.26l.07.08c.66.75 1 1.21.91 2.07-.29 2-3.27 6.89-19.91 17.2a2 2 0 0 0 2.11 3.4c10.5-6.51 15.94-11.07 18.77-14.37v.22c-.17 1.48-1.25 4.27-6.07 8.08l-.2.13a2 2 0 0 0-.32.27c-1 .78-2.17 1.59-3.52 2.44-12.39 7.42-14.57 11.2-14.57 25.32a32.57 32.57 0 0 1-.94 8.08 28.63 28.63 0 0 1-3.15.76A55.65 55.65 0 0 0 99 79.73c-.24-1.2-.49-2.34-.73-3.43-1.54-6.85-2.11-10.3 1.35-13.45zm-46.37 65.59l8.29-.91c.93 1.62 1.94 3.48 3.07 5.64H54.24zm102.1 9.25c-8.77-1.71-16.12 2.55-23.26 6.68-6.27 3.63-12.7 7.4-20.36 7.28-12-.17-21.15-3.42-27.23-5.56a32.61 32.61 0 0 0-6.07-1.79c-4-.47-11.22 4.64-14.65 7.29l-4.72-6c11.14-10.13 9.86-12.71 9.42-13.61-8.1-15.77-11.32-17.66-19.47-20.83l-1.58-.62c-6-2.38-12-8.08-14.21-14.54 3.3 2.36 8.79 4.56 17.81 4.56h.12a2 2 0 0 0 0-4H51c-14 0-17.77-5.57-18.54-7.08 1-8.63 7.82-11.1 10.76-11.75a9.85 9.85 0 0 0 4.44-2.28 3.23 3.23 0 0 1 2.5-1.05 1.92 1.92 0 0 1 1.23.3.77.77 0 0 1 .16.4 2 2 0 0 0 2.46 2.1c.07 0 6.85-1.56 10 2.94 3.46 5.19 5.78 5.72 9.11 4.89a4.81 4.81 0 0 1 3.25 0c3.55 1.3 3.68 3.67 3.68 3.89a2 2 0 0 0 3.76 1 6.79 6.79 0 0 1 2.93-2.54.48.48 0 0 1 .39.17 3.66 3.66 0 0 1 .43 2.54c-.09 1.11-2.12 2.49-3.55 3.06a2 2 0 0 0-1.26 1.72 4.42 4.42 0 0 0 1.28 3.21c1.53 1.64 4.19 2.47 7.91 2.47a23.34 23.34 0 0 0 3.86-.37h.07a25.74 25.74 0 0 0 5-.58 12.83 12.83 0 0 1-3.08 4.18 2 2 0 0 0 .45 3.46 12.66 12.66 0 0 0 4.35.77 10.06 10.06 0 0 0 4.59-1c2.75-1.4 4.65-4.07 5.62-7.93a27.48 27.48 0 0 1 1-3.28 2 2 0 0 0 .53 0c6.24-1.23 10.64-1.19 13.79.09 10.83 4.74 17.94 5.91 22.49 5.77a14.27 14.27 0 0 1-6 2.43 2 2 0 0 0-1.76 2.29 45.49 45.49 0 0 0 1 4.85v.09a38.56 38.56 0 0 0 12.59 20.1c-.16 1.05-.52 2.98-1.09 6.28zm0-13a36 36 0 0 1-5.74-9.16 15.24 15.24 0 0 0 8.15.18l2.49 4a18.3 18.3 0 0 0-4.86 4.98z" />
                <path fill="#fff" d="M72.9 88.66a4.48 4.48 0 1 0 4.48 4.48 4.49 4.49 0 0 0-4.48-4.48zm0 7a2.48 2.48 0 1 1 2.48-2.48 2.48 2.48 0 0 1-2.48 2.45z" />
              </g>
            </svg>
          </div>
        );
      } else if (this.state.visitedCounter.total >= 5 && this.state.visitedCounter.total < 10) {
        rank = 'Expert';
        nextRank = 'Cincinnatus';
        numTilNext = Math.abs(this.state.visitedCounter.total - 10);
        nextRankImg = (
          <div className={styles.ranks}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200">
              <g id="Layer_12_copy" data-name="Layer 12 copy">
                <path fill="#fff" d="M99.71 7.08a93 93 0 1 1-93 93 93.11 93.11 0 0 1 93-93m0-7a100 100 0 1 0 100 100 100 100 0 0 0-100-100z" />
                <g id="Layer_16" data-name="Layer 16">
                  <path fill="#fff" d="M33.44 98.25a9.17 9.17 0 0 1-6.1-2.34 8.49 8.49 0 0 1-2.46-6.41 9.3 9.3 0 0 1 4.29-8.26A10.64 10.64 0 0 1 35 79.62h134a9.13 9.13 0 0 1 6.48 2.16 8.92 8.92 0 0 1 2.66 6.91 9.6 9.6 0 0 1-2.64 7.17 8.75 8.75 0 0 1-6 2.38H33.44zM31.35 84.6a5.37 5.37 0 0 0-2.46 4.9 4.68 4.68 0 0 0 1.22 3.5 5.42 5.42 0 0 0 3.44 1.23h136.07a4.85 4.85 0 0 0 3.15-1.23 5.84 5.84 0 0 0 1.4-4.28 5.16 5.16 0 0 0-1.34-3.94 5.28 5.28 0 0 0-3.56-1.14H35a6.65 6.65 0 0 0-3.62 1z" />
                  <path fill="#fff" d="M151.8 140.76l-.69-3.94c4.52-.79 16.51-2.89 16.51-40.57h4c0 28.38-6.11 42.11-19.82 44.51zM49.77 164.52c-4.6 0-5.89-2.39-6.23-3.42-.82-2.49.67-5.53 3.91-7.93a3.39 3.39 0 0 0 1.11-3.81 16.56 16.56 0 0 1 1-12.29c-8.19-3.3-13.86-11.13-16.45-22.8a69.2 69.2 0 0 1-1.47-18.17l4 .3c0 .32-2.13 32.14 17.39 37.65l2.77.78-1.7 2.33s-3.64 5.14-1.72 11a7.38 7.38 0 0 1-2.53 8.27c-2.18 1.62-2.62 3.05-2.49 3.46s.82.68 2.43.68c4.31 0 6.86-.69 8-2.17s1.22-3.78.4-7.13c-.92-3.76-.51-6.78 1.22-9 2.86-3.64 8.27-3.64 10.87-3.64h53v4h-53c-2 0-6.06 0-7.72 2.11-.92 1.18-1.08 3-.47 5.55 1.14 4.67.76 8.12-1.15 10.54-2.58 3.27-7.32 3.69-11.17 3.69z" />
                  <path fill="#fff" d="M144.29 164.66c-3.84 0-8.59-.42-11.17-3.7-1.91-2.43-2.28-5.87-1.15-10.54.59-2.45.42-4.29-.52-5.49-1.82-2.31-6.41-2.31-8.15-2.31v-4c2.48 0 8.27 0 11.29 3.84 1.74 2.21 2.16 5.21 1.26 8.91-.81 3.35-.68 5.75.4 7.13s3.71 2.17 8 2.17c1.61 0 2.34-.42 2.43-.68s-.31-1.84-2.49-3.46-3.19-4.51-2.6-8c1.66-9.81 8.14-12.08 11.37-11.91l-.21 4 .11-2-.08 2c-.22 0-5.77-.07-7.24 8.58-.23 1.35-.23 3.16 1 4.1 3.23 2.4 4.73 5.44 3.91 7.93-.27 1.04-1.56 3.43-6.16 3.43zM86.15 83.61a2 2 0 0 1-1.72-1l-6-10a2 2 0 0 1 1.34-3c.08 0 8.78-1.76 12.35-8.44 2.3-4.3 2-9.83-.74-16.43-1.82-4.38-4.33-6.5-7.67-6.5h-.18c-7.11.16-16.47 9.86-18.26 14.74a2 2 0 0 1-2.66 1.16c-.07 0-7.7-3.12-12.38 1.36A22.3 22.3 0 0 0 44 66.64a2 2 0 0 1-2.79 1.49c-1.49-.66-5-1.62-6.28-.38a3.53 3.53 0 0 0-1.22 2.9 2.21 2.21 0 0 0 .93 1.69c1.33.87 5.81.37 7.22-.58a2 2 0 0 1 3.1 2 9.27 9.27 0 0 0 2.22 6.63 2 2 0 0 1-3.09 2.54 13.7 13.7 0 0 1-3-6.59c-2.85.72-6.53.77-8.64-.61A6.19 6.19 0 0 1 29.72 71a7.59 7.59 0 0 1 2.44-6.16c2.41-2.31 6.11-1.82 8.48-1.16a26.74 26.74 0 0 1 6.86-11c4.95-4.74 11.65-3.68 14.86-2.78 3.3-6.17 12.73-15.41 21.11-15.59 3.53-.08 8.48 1.41 11.62 9 3.28 7.78 3.47 14.47.56 19.89-3.12 5.81-9 8.55-12.42 9.71l4.63 7.73a2 2 0 0 1-1.71 3z" />
                  <path fill="#fff" d="M80.17 59.82a2 2 0 0 1-.6-3.91c7.51-2.39 10.31-5.4 11.33-7.51a5.25 5.25 0 0 0 .49-3.69 2 2 0 0 1 3.74-1.41 9 9 0 0 1-.63 6.84c-2 4.09-6.6 7.31-13.72 9.57a2 2 0 0 1-.61.11zM54.38 65.92a3.86 3.86 0 1 1 3.86-3.86 3.86 3.86 0 0 1-3.86 3.86zm0-5.72a1.86 1.86 0 1 0 1.86 1.86 1.86 1.86 0 0 0-1.86-1.86z" />
                  <ellipse fill="#fff" cx="80.17" cy="43.43" rx="2.7" ry="1.3" transform="rotate(-14.61 80.147 43.417)" />
                </g>
              </g>
            </svg>
          </div>
        );
      } else if (this.state.visitedCounter.total >= 10) {
        rank = 'Cincinnatus';
        nextRank = false;
        numTilNext = false;
        nextRankImg = (
          <div className={styles.ranks}>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200">
              <g id="Layer_17" data-name="Layer 17">
                <path fill="#fff" d="M99.59 7.12a93 93 0 1 1-93 93 93.11 93.11 0 0 1 93-93m0-7a100 100 0 1 0 100 100 100 100 0 0 0-100-100z" />
                <path fill="#fff" d="M79.47 106.77c-17.2 0-28.13-3.34-33.43-10.23-4.12-5.36-4.84-12.78-2.21-22.69 4.08-15.38 11.22-15 18.81-13.14a20 20 0 0 0 4.39.76 20.11 20.11 0 0 0 6.9-1.47c3.13-1.09 6.37-2.21 10.78-1.09a13.79 13.79 0 0 1 9.84 8.95A2 2 0 0 1 90.71 69a9.78 9.78 0 0 0-7-6.18c-3.25-.83-5.67 0-8.49 1A24 24 0 0 1 67 65.48a23 23 0 0 1-5.34-.88c-5.91-1.45-10.57-2.59-14 10.28-2.26 8.63-1.76 14.92 1.55 19.22 4.49 5.83 14.38 8.67 30.26 8.67 22.71 0 28.09-11.1 28.14-11.21a2 2 0 1 1 3.63 1.67c-.24.55-6.53 13.54-31.77 13.54zM174.72 157.87a2 2 0 0 1-2-1.67c-5.45-32.53-20.8-38.6-33.13-43.49-4.82-1.91-9-3.56-11.89-6.55-7.17-7.39-5.16-14.65-3.23-21.67a38.5 38.5 0 0 0 1.84-10.12v-.11c0-.04.9-17.37-.71-23.29a2 2 0 0 1 3.86-1c1.75 6.42.91 23.23.85 24.5a41.71 41.71 0 0 1-2 11.13c-1.86 6.75-3.33 12.07 2.24 17.82 2.31 2.38 6.1 3.88 10.49 5.62 12.57 5 29.78 11.79 35.6 46.54a2 2 0 0 1-1.64 2.3z" />
                <path fill="#fff" d="M93 116.15c-27.82 0-34.93-4.33-35.65-4.82a2 2 0 0 1-.73-.93l-3.38-8.76a2 2 0 1 1 3.73-1.44l3.03 8.06c1.91.87 10.17 3.89 32.92 3.89 26 0 29.81-19.64 29.84-19.84a2 2 0 0 1 3.94.7c.01.22-4.4 23.14-33.7 23.14z" />
                <path fill="#fff" d="M131.69 193.6a2 2 0 0 1-1-.3C72.15 157.23 57.2 133.65 55 120.21a18.66 18.66 0 0 1 .34-8.51c-3.76.45-10.27 2.62-14 11.8a2 2 0 0 1-.65.85c-11 8.26-15.82 12.7-15.82 31.51a2 2 0 0 1-4 0c0-20.37 5.82-26 17-34.38 6.61-15.56 20.75-13.82 20.89-13.8a2 2 0 0 1 1.24 3.26c-.07.09-2.15 2.9-1 9 4.44 24 48.12 54.16 73.77 70a2 2 0 0 1-1.05 3.7z" />
                <path fill="#fff" d="M52 185.79a2 2 0 0 1-1.84-1.23c-12.34-29.36-12.65-61.47-12.66-61.79a2 2 0 0 1 2-2 2 2 0 0 1 2 2c0 .31.32 31.66 12.34 60.26a2 2 0 0 1-1.84 2.76zM83.46 196.11a2 2 0 0 1-1.09-.32c-22-14.31-25.88-34.4-26-35.25a2 2 0 0 1 3.93-.72c0 .21 3.82 19.29 24.28 32.62a2 2 0 0 1-1.09 3.68zM109.42 197.4a2 2 0 0 1-.57-.08c-31.09-9.22-43.4-37.69-43.91-38.9a2 2 0 0 1 3.69-1.55c.12.28 12.13 28 41.36 36.62a2 2 0 0 1-.57 3.92zM67.5 108.77h-.29l-3.27-.48a2 2 0 0 1-1.58-1.29l-1.09-2.89a2 2 0 1 1 3.73-1.42l.68 1.79.5.07.39-1a2 2 0 1 1 3.75 1.4l-1 2.56a2 2 0 0 1-1.82 1.26zM78.4 109.67h-.29l-3.27-.48a2 2 0 0 1-1.58-1.27l-.79-2.1a2 2 0 0 1 3.74-1.41l.38 1 .5.07.39-1a2 2 0 1 1 3.75 1.4l-1 2.56a2 2 0 0 1-1.83 1.23zM128.3 55.88a2 2 0 0 1-1.57-3.23l2.53-3.23-3.45-6.29a2 2 0 0 1 3.51-1.92l4.08 7.44a2 2 0 0 1-.18 2.2l-3.35 4.27a2 2 0 0 1-1.57.76z" />
                <path fill="#74af7b" d="M128.92 44.71s-7.29-2.94-9.12 4.57c0 0 5.68 4 10.09-2.75" />
                <path fill="#fff" d="M123.71 51.94a9 9 0 0 1-4.77-1.44 1.5 1.5 0 0 1-.6-1.58 7.85 7.85 0 0 1 3.91-5.48c3.28-1.68 7.07-.19 7.23-.13a1.5 1.5 0 0 1 .89 1.78 1.48 1.48 0 0 1 .34.17 1.5 1.5 0 0 1 .43 2.08 9.36 9.36 0 0 1-6 4.46 7.59 7.59 0 0 1-1.43.14zm-2.1-3.42a5.38 5.38 0 0 0 3 .33 6.25 6.25 0 0 0 3.75-2.76c-.11 0-2.74-1-4.76 0a4.4 4.4 0 0 0-1.99 2.43z" />
                <path fill="#74af7b" d="M121.26 46.52s-4 2.63-10 .78c2.48-3.71 2.17-3.78 4.25-4.66" />
                <path fill="#fff" d="M115.53 49.46a15.8 15.8 0 0 1-4.67-.73 1.5 1.5 0 0 1-.8-2.27c.47-.7.84-1.27 1.14-1.74 1.41-2.17 1.73-2.61 3.78-3.47a1.5 1.5 0 0 1 1.15 2.75c-1.25.52-1.25.53-2.4 2.3a10.13 10.13 0 0 0 6.7-1.06 1.5 1.5 0 0 1 1.66 2.5 12.53 12.53 0 0 1-6.56 1.72zM126 44.75a2 2 0 0 1-1.52-3.3c.05-.06 5.41-6.48 1.88-10-.83-.83-1.31-.73-1.49-.69-1.6.32-3.63 3.55-4.5 5.63a2 2 0 0 1-3.69-1.54c.5-1.19 3.18-7.18 7.42-8a5.47 5.47 0 0 1 5.1 1.79c4.89 4.89 1.25 12-1.67 15.43a2 2 0 0 1-1.53.68z" />
                <path fill="#74af7b" d="M112.74 38.24a14.28 14.28 0 0 0-8.74 3.93 28.36 28.36 0 0 0 9.71 1.64" />
                <path fill="#fff" d="M113.67 45.3a29.7 29.7 0 0 1-10.27-1.75 1.5 1.5 0 0 1-.49-2.46 15.75 15.75 0 0 1 9.79-4.36 1.5 1.5 0 0 1 .09 3 13.08 13.08 0 0 0-5.61 1.82 29.78 29.78 0 0 0 6.49.75 1.5 1.5 0 0 1 0 3z" />
                <path fill="#74af7b" d="M123.08 44.71s-9 .74-11.16-9.09c7.88 0 9.94 1.18 11.16 9.09z" />
                <path fill="#fff" d="M122.45 46.23c-3.76 0-10.22-2.08-12-10.3a1.5 1.5 0 0 1 1.47-1.82c9.45 0 11.44 2.59 12.64 10.36a1.5 1.5 0 0 1-1.36 1.72q-.35.04-.75.04zm-8.52-9.09a8.92 8.92 0 0 0 7.36 6c-.99-4.89-2.53-5.84-7.37-6z" />
                <path fill="#74af7b" d="M74.51 43.37s-3.71-.4-5.88 3.93c0 0 4.25 3.3 13.42-.77l-1.27-3.17" />
                <path fill="#fff" d="M73.69 50a10.08 10.08 0 0 1-6-1.57 1.5 1.5 0 0 1-.42-1.86c2.6-5.2 7.18-4.77 7.38-4.75a1.5 1.5 0 0 1-.3 3 4.44 4.44 0 0 0-3.57 1.81c1.55.49 4.58.85 9.31-1l-.72-1.79a1.5 1.5 0 0 1 2.79-1.12L83.44 46a1.5 1.5 0 0 1-.78 1.93A22.18 22.18 0 0 1 73.69 50z" />
                <path fill="#74af7b" d="M76.12 38.24a11.54 11.54 0 0 0-7.48 1.93 9.86 9.86 0 0 0 10.92 2.58" />
                <path fill="#fff" d="M75.93 45a11.52 11.52 0 0 1-8.44-3.83 1.5 1.5 0 0 1 .26-2.17 13 13 0 0 1 8.56-2.21 1.5 1.5 0 0 1-.36 3 10.67 10.67 0 0 0-4.73.72 8 8 0 0 0 7.8.91 1.5 1.5 0 1 1 1.1 2.79 11.36 11.36 0 0 1-4.19.79z" />
                <path fill="#74af7b" d="M84.85 36.81a12.85 12.85 0 0 0-9.17-2.22s-1.61 5.48 7.55 10.71c3.24-4.29 2.9-5.14 2.9-5.14" />
                <path fill="#fff" d="M83.23 46.81a1.49 1.49 0 0 1-.74-.2c-10.07-5.75-8.32-12.17-8.25-12.44a1.5 1.5 0 0 1 1.22-1.06 14.31 14.31 0 0 1 10.32 2.53A1.5 1.5 0 0 1 83.93 38a11.42 11.42 0 0 0-6.85-2c.11 1.44 1 4.31 5.76 7.34a12.18 12.18 0 0 0 1.8-3.09 1.5 1.5 0 0 1 2.9-.6c.32.81.19 2.22-3.1 6.59a1.5 1.5 0 0 1-1.21.57zm1.51-6.09zm0 0zm0 0zm0 0zm0 0zm0 0zm-.08-.54z" />
                <path fill="#fff" d="M71.13 65a2 2 0 0 1-.7-3.88c1.7-.63 3.65-4.24 5.53-7.74 2.62-4.85 5.88-10.89 11-14.55 9.59-6.83 22.52-2.89 23.04-2.72a2 2 0 0 1-1.2 3.82c-.11 0-11.6-3.53-19.53 2.13-4.37 3.11-7.25 8.47-9.8 13.19s-4.55 8.43-7.66 9.59a2 2 0 0 1-.68.16z" />
                <path fill="#fff" d="M88.13 42.42a2 2 0 0 1-.93-.23c-3.72-1.94-5.75-7-5.57-10.75a6.36 6.36 0 0 1 2.85-5.1 6.55 6.55 0 0 1 6.17-.34c4.41 1.82 5.51 9.81 5.69 11.39a2 2 0 0 1-4 .44c-.34-3-1.65-7.48-3.24-8.14a2.67 2.67 0 0 0-2.49 0 2.37 2.37 0 0 0-1 1.92c-.12 2.41 1.26 5.89 3.43 7a2 2 0 0 1-.93 3.77z" />
                <ellipse fill="#fff" cx="55.26" cy="68.7" rx="2.81" ry="1.67" transform="rotate(-30 55.256 68.686)" />
                <ellipse fill="#fff" cx="76.85" cy="70.83" rx="1.67" ry="2.81" transform="rotate(-53.8 76.845 70.834)" />
                <path fill="#fff" d="M85.36 57a6.59 6.59 0 1 1 5.69-9.88A6.59 6.59 0 0 1 85.36 57zm0-9.18a2.59 2.59 0 1 0 2.25 1.3A2.57 2.57 0 0 0 86 47.95a2.61 2.61 0 0 0-.66-.09zM101.76 58.44a6.61 6.61 0 0 1-1.72-.23 6.59 6.59 0 1 1 7.41-9.66 6.59 6.59 0 0 1-5.7 9.88zm0-9.18a2.59 2.59 0 1 0 2.24 1.3 2.59 2.59 0 0 0-2.26-1.3z" />
              </g>
            </svg>
          </div>
        );
      }

      let nextRankContent = null;
      if (nextRank) {
        nextRankContent = <p>Visit <span className={styles.bold}>{numTilNext}</span> more to become a {nextRank}</p>;
      }
      pageContent = (
        <div className={styles.wrapper}>
          <h1>Great Job!</h1>
          <p>You&apos;ve been to <span className={styles.redNum}>{this.state.visitedCounter.total}</span> {places}!</p>
          <p>Your Rank: <span className={styles.bold}>{rank}</span></p>
          {nextRankImg}
          {nextRankContent}
          <button onClick={this.continueExploring}>Continue Exploring</button>
        </div>
      );
    }

    return (
      <div className={styles.container}>
        <div className={styles.overlay} />
        {pageContent}
      </div>
    );
  }
}
